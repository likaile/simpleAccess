<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lkl.dao.TranactionRecordDao" >
  <resultMap id="BaseResultMap" type="cn.lkl.vo.TranactionRecord" >
       <result column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="toUser" property="toUser" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="companyId" property="companyId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,type, user,toUser ,num, count,reason,created,status,companyId
  </sql>
   <select id="selectAllTypeTrans" resultType="java.lang.Integer">
		select
		count(*)
		from tranactionRecord where companyId = #{companyId}
	</select>
  <select id="selectByUserAndTime" resultMap="BaseResultMap" parameterType="cn.lkl.vo.TranactionRecord" >
    select 
    <include refid="Base_Column_List" />
    from tranactionRecord
    <where>  status = 0 
            <if test="created != null">  
                and created LIKE CONCAT('%', CONCAT(#{created}, '%'))
            </if>  
			<if test="type != null">  
                and type = #{type}  
            </if>
             <if test="reason != null">  
                and reason LIKE  CONCAT(#{reason}, '%')
            </if>   
            and companyId = #{companyId} 
     </where>  
     order by created desc
  </select>
  <select id="getTranactionRecordByID" resultMap="BaseResultMap" parameterType="cn.lkl.vo.TranactionRecord">
		select
		<include refid="Base_Column_List" />
		from tranactionRecord 
		where 
            id = #{id}
            and status =  0 
</select>
<update id="deleteTranactionRecord"  parameterType="cn.lkl.vo.TranactionRecord">
	 UPDATE tranactionRecord
	 <trim prefix="set" suffixOverrides=",">
	  status=1
	   </trim>
 WHERE id= #{id}
</update>
  <insert id="insert" parameterType="cn.lkl.vo.TranactionRecord" >
    insert into tranactionRecord (type, user, num, toUser
      count, reason, created,status,companyId
      )
    values (#{type,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER},  #{toUser,jdbcType=VARCHAR},
      #{count,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, #{created,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},#{companyId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.lkl.vo.TranactionRecord" >
    insert into tranactionRecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        type,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="toUser != null" >
        toUser,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="created != null" >
        created,
      </if>
       <if test="status != null" >
        status,
      </if>
      <if test="companyId != null" >
        companyId
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="toUser != null" >
        #{toUser,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
</mapper>